1.是什么：是处理soap接口的开源软件，旨在为服务创建必要的基础设施.其他开源软件还有Axis2，JWS，XFire
2.实现;
1）Code-First：即先开发代码，然后由WebService框架发布成WSDL。
2）WSDL-First：即先用WSDL定义接口，然后用WebService框架生成代码框架，然后实现代码。

步骤：
1）生成wsdl
2）web配置：
3）spring配置

服务提供者：
4）service接口定义
5）service接口实现

服务消费者：它向UserService发起服务请求。 
4）Client和User.aegis.xml

相关建议 
CXF 的功能特性非常多，要熟练使用它非得花些功夫才行。笔者在此给出一些建议，期望能对读
者在今后学习和使用CXF 的过程中有所帮助： 
1.熟悉工具涉及领域的协议是个不错的主意。虽然CXF提供了简化服务创建的编程模型，但是如果不了解WS-*协议，在遇到问题调试时必然会花不少时间。尤其是在SOA的环境中，客户端和服务不一定是使用同一语言、同一工具实现的情况下，互操作问题经常是由于对协议的不同支持造成的； 
2.作为CXF实现内容的一个重点，JAX-WS是值得关注的； 
3.在Java的环境中，Spring几乎已经成为开发服务器端应用的首选，应重点关注CXF和Spring的配合使用； 
4.近些年来，Java世界的动态语言旋风愈演愈烈。Groovy由于其语法和Java兼容且提供了不少方便的语法，吸引了不少Java开发者。更何况新兴的Grails框架逐渐引人注目，其前途不可限量。GroovyWS专为Groovy开发，且底层就是CXF，作为CXF的开发者，没有理由不去使用可以使自己生活过得舒适的工具； 
5.CXF携带了大量的例程，它们是熟悉和了解CXF的大门的； 
6.参与社区，参与讨论，往往比起自己单干要有用得多。 

