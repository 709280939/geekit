mybatisConfig:
@Bean
    public SqlSessionFactory sqlSessionFactoryBean(DataSource dataSource) throws Exception {
        SqlSessionFactoryBean factory = new SqlSessionFactoryBean();
        factory.setDataSource(dataSource);
        factory.setTypeAliasesPackage(MODEL_PACKAGE);
        //添加XML目录
        ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();
        factory.setMapperLocations(resolver.getResources("classpath:mapper/*.xml"));
        return factory.getObject();
    }
@Bean
    public MapperScannerConfigurer mapperScannerConfigurer() {
        MapperScannerConfigurer mapperScannerConfigurer = new MapperScannerConfigurer();
        mapperScannerConfigurer.setSqlSessionFactoryBeanName("sqlSessionFactoryBean");
        mapperScannerConfigurer.setBasePackage("com.test.dao");
        //配置通用Mapper，详情请查阅官方文档
        Properties properties = new Properties();
       // properties.setProperty("mappers", "com.test.core.mapper");
        properties.setProperty("notEmpty", "false");
        properties.setProperty("IDENTITY", "MYSQL");
        mapperScannerConfigurer.setProperties(properties);

        return mapperScannerConfigurer;
    }
//屏蔽安全检查
@SpringBootApplication(exclude = {SecurityAutoConfiguration.class})
class Application{}

public class SecurityConfig extends WebSecurityConfigurerAdapter {
    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http.authorizeRequests().antMatchers("/**").permitAll();
    }
}


/**
*支持https
*/
生成keystore

application.properties
server.port=8443
server.ssl.key-store=src/main/resources/logabc.keystore
#server.ssl.key-store=classpath:logabc.keystore
#密钥库密码
server.ssl.key-store-password=mi**pwd2
server.ssl.key-password:mi**pwd
server.ssl.keyStoreType=JKS
